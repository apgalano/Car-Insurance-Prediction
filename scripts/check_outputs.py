#!/usr/bin/env python3
"""Script to check the outputs generated by the training pipeline."""

import sys
from pathlib import Path
import pandas as pd

# Add src to path
sys.path.append(str(Path(__file__).parent.parent))

from src.config.settings import OUTPUTS_DIR, FIGURES_DIR, MODELS_DIR, REPORTS_DIR


def check_outputs():
    """Check if all expected outputs were generated."""
    print("üîç Checking Training Pipeline Outputs")
    print("=" * 40)
    
    # Check directories
    directories = {
        "Figures": FIGURES_DIR,
        "Models": MODELS_DIR,
        "Reports": REPORTS_DIR
    }
    
    for name, directory in directories.items():
        if directory.exists():
            files = list(directory.glob("*"))
            print(f"‚úÖ {name} directory: {len(files)} files")
            for file in files[:5]:  # Show first 5 files
                print(f"   üìÑ {file.name}")
            if len(files) > 5:
                print(f"   ... and {len(files) - 5} more files")
        else:
            print(f"‚ùå {name} directory: Not found")
        print()
    
    # Check specific files
    expected_files = {
        "Feature Importance": REPORTS_DIR / "feature_importance.csv",
        "Data Description": REPORTS_DIR / "data_description.csv",
        "Trained Model": MODELS_DIR / "car_insurance_model.pkl"
    }
    
    print("üìã Expected Output Files:")
    for name, filepath in expected_files.items():
        if filepath.exists():
            if filepath.suffix == '.csv':
                try:
                    df = pd.read_csv(filepath)
                    print(f"‚úÖ {name}: {df.shape[0]} rows, {df.shape[1]} columns")
                except Exception as e:
                    print(f"‚ö†Ô∏è  {name}: File exists but couldn't read - {e}")
            else:
                size_mb = filepath.stat().st_size / (1024 * 1024)
                print(f"‚úÖ {name}: {size_mb:.2f} MB")
        else:
            print(f"‚ùå {name}: Not found")
    
    print("\nüéØ Summary:")
    print("If all files show ‚úÖ, the training pipeline completed successfully!")
    print("You can now:")
    print("‚Ä¢ View plots in outputs/figures/")
    print("‚Ä¢ Check feature importance in outputs/reports/feature_importance.csv")
    print("‚Ä¢ Load the trained model from outputs/models/car_insurance_model.pkl")


if __name__ == "__main__":
    check_outputs()